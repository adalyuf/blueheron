# Generated by Django 4.2.1 on 2023-07-14 13:23

from django.db import migrations
from django.contrib.postgres.search import SearchVector

def compute_search_vector(apps, schema_editor):
    Keyword = apps.get_model("ranker", "Keyword")
    Keyword.objects.update(search_vector=SearchVector('keyword', 'natural_language_question', 'ai_answer'))

class Migration(migrations.Migration):
    dependencies = [
        ("ranker", "0024_keyword_search_vector"),
    ]

    operations = [
        migrations.RunSQL(
            sql='''
              CREATE TRIGGER search_vector_trigger
              BEFORE INSERT OR UPDATE OF keyword, natural_language_question, ai_answer, search_vector
              ON ranker_keyword
              FOR EACH ROW EXECUTE PROCEDURE
              tsvector_update_trigger(
                search_vector, 'pg_catalog.english', keyword, natural_language_question, ai_answer
              );
            ''',

            reverse_sql = '''
              DROP TRIGGER IF EXISTS search_vector_trigger
              ON ranker_keyword;
            '''
        ),
        migrations.RunPython(
            compute_search_vector, reverse_code=migrations.RunPython.noop
        ),
    ]
