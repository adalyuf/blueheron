# Generated by Django 4.1.7 on 2023-04-12 15:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ranker.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AIModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ai_model", models.CharField(max_length=200)),
                ("api_identifier", models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Conversation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("requested_at", models.DateTimeField(null=True)),
                ("answered_at", models.DateTimeField(null=True)),
                (
                    "ai_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="ranker.aimodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("domain", models.CharField(max_length=200, unique=True)),
                ("keywords", models.BigIntegerField(null=True)),
                ("traffic", models.BigIntegerField(null=True)),
                (
                    "cost",
                    models.DecimalField(decimal_places=2, max_digits=19, null=True),
                ),
                ("rank", models.IntegerField(null=True)),
                ("ad_keywords", models.BigIntegerField(null=True)),
                ("ad_traffic", models.BigIntegerField(null=True)),
                (
                    "ad_cost",
                    models.DecimalField(decimal_places=2, max_digits=19, null=True),
                ),
                ("adult_content", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["rank"],
            },
        ),
        migrations.CreateModel(
            name="Keyword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("keyword", models.CharField(max_length=200, unique=True)),
                ("user_intent", models.TextField(null=True)),
                ("natural_language_question", models.TextField(null=True)),
                ("ai_answer", models.TextField(null=True)),
                ("likely_previous_queries", models.JSONField(null=True)),
                ("likely_next_queries", models.JSONField(null=True)),
                ("requested_at", models.DateTimeField(null=True)),
                ("answered_at", models.DateTimeField(null=True)),
                ("json_response", models.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("project", models.CharField(max_length=200)),
                ("requests_used", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Template",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("template", models.CharField(max_length=200, unique=True)),
                (
                    "scope",
                    models.CharField(
                        choices=[("global", "global"), ("per_domain", "per_domain")],
                        default="per_domain",
                        max_length=200,
                    ),
                ),
                ("helper_text_before", models.TextField(blank=True, null=True)),
                ("helper_text_after", models.TextField(blank=True, null=True)),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ranker.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TokenType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Token",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=200)),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ranker.tokentype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TemplateItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("prompt1", models.TextField()),
                ("prompt2", models.CharField(blank=True, max_length=200, null=True)),
                ("title", models.CharField(blank=True, max_length=200, null=True)),
                ("order", models.IntegerField(default=100)),
                ("visible", models.BooleanField(default=True)),
                (
                    "mode",
                    models.CharField(
                        choices=[("markdown", "markdown"), ("json", "json")],
                        default="markdown",
                        max_length=200,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ranker.template",
                    ),
                ),
                (
                    "token1",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ranker.tokentype",
                    ),
                ),
            ],
            options={
                "ordering": ["template", "order"],
            },
        ),
        migrations.CreateModel(
            name="ProjectUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="ranker.project"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectDomain",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "domain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="ranker.domain"
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="ranker.project"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="project",
            name="domain",
            field=models.ManyToManyField(
                through="ranker.ProjectDomain", to="ranker.domain"
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="user",
            field=models.ManyToManyField(
                through="ranker.ProjectUser", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("prompt", models.TextField()),
                ("title", models.CharField(max_length=200, null=True)),
                ("response", models.TextField(blank=True, null=True)),
                ("markdown_response", models.TextField(blank=True, null=True)),
                ("json_response", models.JSONField(null=True)),
                ("visible", models.BooleanField(default=True)),
                ("order", models.IntegerField(default=100)),
                ("requested_at", models.DateTimeField(null=True)),
                ("answered_at", models.DateTimeField(null=True)),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ranker.conversation",
                    ),
                ),
                (
                    "template_item",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ranker.templateitem",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="KeywordPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("domain_text", models.TextField()),
                ("keyword_text", models.TextField()),
                ("position", models.IntegerField(null=True)),
                ("previous_position", models.IntegerField(null=True)),
                ("search_volume", models.IntegerField(null=True)),
                ("keyword_difficulty", models.IntegerField(null=True)),
                (
                    "cpc",
                    models.DecimalField(decimal_places=2, max_digits=19, null=True),
                ),
                ("url", models.TextField(null=True)),
                ("traffic", models.IntegerField(null=True)),
                (
                    "traffic_percent",
                    models.DecimalField(decimal_places=2, max_digits=19, null=True),
                ),
                (
                    "traffic_cost",
                    models.DecimalField(decimal_places=2, max_digits=19, null=True),
                ),
                (
                    "competitive_difficulty",
                    models.DecimalField(decimal_places=2, max_digits=19, null=True),
                ),
                ("results", models.BigIntegerField(null=True)),
                ("trends", models.TextField(null=True)),
                ("retrieved_at", models.DateTimeField(null=True)),
                ("serp", models.TextField(null=True)),
                ("intents", models.TextField(null=True)),
                ("type", models.TextField(null=True)),
                (
                    "domain",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ranker.domain",
                    ),
                ),
                (
                    "keyword",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ranker.keyword",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="KeywordFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "filepath",
                    models.FileField(upload_to=ranker.models.keyword_directory_path),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("primary", models.BooleanField(default=False)),
                ("processed_at", models.DateTimeField(default=None, null=True)),
                (
                    "domain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="ranker.domain"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="conversation",
            name="domain",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="ranker.domain",
            ),
        ),
        migrations.AddField(
            model_name="conversation",
            name="project",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="ranker.project",
            ),
        ),
        migrations.AddField(
            model_name="conversation",
            name="template",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="ranker.template"
            ),
        ),
        migrations.AddConstraint(
            model_name="conversation",
            constraint=models.UniqueConstraint(
                fields=("template", "domain", "project", "ai_model"),
                include=("answered_at",),
                name="unique_template_domain",
            ),
        ),
    ]
